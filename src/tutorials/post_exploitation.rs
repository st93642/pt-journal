pub const POST_EXPLOITATION_STEPS: &[(&str, &str)] = &[
    (
        "Privilege escalation",
        "OBJECTIVE: Attempt to gain higher privileges on compromised systems.

STEP-BY-STEP PROCESS:
1. Current privilege assessment:
   - Determine current user privileges and permissions
   - Identify available escalation vectors
   - Check for sudo, suid binaries, or other privilege mechanisms

2. Local privilege escalation:
   - Test kernel exploits for outdated systems
   - Check for misconfigured sudo permissions
   - Look for vulnerable suid/sgid binaries

3. Windows privilege escalation:
   - Check for service misconfigurations
   - Test for token impersonation
   - Look for scheduled task vulnerabilities

4. Linux privilege escalation:
   - Check for writable files in PATH
   - Test for cron job vulnerabilities
   - Look for capability misconfigurations

5. Documentation:
   - Record privilege escalation methods used
   - Document new access levels achieved
   - Note any persistent privilege changes

WHAT TO LOOK FOR:
- Kernel vulnerabilities allowing root access
- Misconfigured service accounts with high privileges
- Weak sudo configurations
- Vulnerable scheduled tasks or cron jobs

COMMON PITFALLS:
- Some privilege escalation requires specific conditions
- Modern systems have better exploit mitigations
- Some escalation methods are noisy and detectable
- Privilege changes may not persist across reboots"
    ),
    (
        "Lateral movement",
        "OBJECTIVE: Move through the network to access additional systems and data.

STEP-BY-STEP PROCESS:
1. Network reconnaissance:
   - Map internal network from compromised host
   - Identify other systems and services
   - Check for domain trusts and authentication relationships

2. Credential harvesting:
   - Extract credentials from compromised systems
   - Check for stored passwords and hashes
   - Look for SSH keys and configuration files

3. Authentication reuse:
   - Test harvested credentials on other systems
   - Check for password reuse across the environment
   - Attempt pass-the-hash or pass-the-ticket attacks

4. Service exploitation:
   - Exploit vulnerable services on other systems
   - Use compromised credentials for access
   - Chain vulnerabilities for broader access

5. Persistence establishment:
   - Create backdoors on additional systems
   - Establish command and control channels
   - Document access paths and methods

WHAT TO LOOK FOR:
- Domain admin credentials
- Service accounts with broad access
- Vulnerable internal services
- Trust relationships between systems

COMMON PITFALLS:
- Network segmentation may limit lateral movement
- Some credentials have limited scope or expiration
- Security monitoring may detect lateral movement
- Some systems require multi-factor authentication"
    ),
    (
        "Data access validation",
        "OBJECTIVE: Locate and access sensitive data within the compromised environment.

STEP-BY-STEP PROCESS:
1. Data discovery:
   - Identify databases, file shares, and storage systems
   - Check for sensitive file types and documents
   - Look for backup files and archives

2. Database access:
   - Connect to identified databases
   - Extract table schemas and data samples
   - Check for sensitive data patterns

3. File system exploration:
   - Search for sensitive files and documents
   - Check user directories and shared folders
   - Look for configuration files with secrets

4. Data classification:
   - Identify PII, financial data, intellectual property
   - Assess data sensitivity and regulatory requirements
   - Document data locations and access controls

5. Data extraction:
   - Safely extract samples of sensitive data
   - Document data volume and types found
   - Note any encryption or protection mechanisms

WHAT TO LOOK FOR:
- Customer PII and personal data
- Financial records and payment information
- Intellectual property and trade secrets
- System credentials and configuration data

COMMON PITFALLS:
- Some data may be encrypted or access-controlled
- Large data volumes may be impractical to extract
- Some data access triggers security alerts
- Data may be distributed across multiple systems"
    ),
    (
        "Cleanup procedures",
        "OBJECTIVE: Remove evidence of compromise and restore systems to operational state.

STEP-BY-STEP PROCESS:
1. Artifact identification:
   - Identify all files, processes, and logs created
   - Check for persistence mechanisms established
   - Document all changes made during testing

2. Log cleanup:
   - Clear authentication logs
   - Remove evidence from security event logs
   - Check for centralized logging systems

3. File and process cleanup:
   - Remove uploaded files and tools
   - Terminate any background processes
   - Delete temporary files and directories

4. Configuration restoration:
   - Restore modified configuration files
   - Reset any changed passwords or permissions
   - Verify system functionality after cleanup

5. Verification:
   - Confirm all artifacts have been removed
   - Test system functionality and security
   - Document cleanup process and verification

WHAT TO LOOK FOR:
- Log entries showing compromise activities
- Unusual files or processes remaining
- Modified system configurations
- Persistence mechanisms still active

COMMON PITFALLS:
- Some logs may be immutable or replicated
- System backups may contain evidence
- Some changes may be difficult to reverse
- Cleanup itself may leave evidence"
    ),
];